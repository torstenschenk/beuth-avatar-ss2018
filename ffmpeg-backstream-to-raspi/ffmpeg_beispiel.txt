############################################################
   video Audio Stream to Localhost 1sec delay, works!!!!
############################################################

# 1) start server
  ffserver -f ffserver.conf

# 2) start camera stream to server
  ffmpeg -re -f video4linux2 -i /dev/video0 -fflags nobuffer -f alsa -i pulse http://localhost:8090/yolandi1.ffm

# 3) run receiver on laptop or raspi
# viel Delay
  mplayer http://localhost:8090/test.webm
# ca 1.3 sec
  ffplay -probesize 32 -sync ext http://localhost:8090/test.webm
  ffplay -fflags nobuffer -probesize 32 -sync ext http://localhost:8090/test.webm

# 4) Status webpage in browser des Servers
Status page: http://192.168.178.25:8090/status.html
oder http://localhost:8090/status.html



### not needed only for two streams
### ffmpeg -re -f video4linux2 -i /dev/video0 -fflags nobuffer -f alsa -i pulse -ac 2 -strict experimental http://localhost:8090/yolandi1.ffm

############
### ## info ffserver.conf
### ILE: ffserver.conf:
### # Serverconfig
### TTPPort 8090
### TTPBindAddress 0.0.0.0
### axHTTPConnections 2000
### axClients 1000
### axBandwidth 1000
### ustomLog -
### 
### Feed yolandi1.ffm>
###  File ./yolandi1.ffm
###  FileMaxSize 1G
###  ACL allow 127.0.0.1
### /Feed>
### 
###  Example streams
### Stream test.webm>             # Output stream URL definition
###   Feed yolandi1.ffm              # Feed from which to receive video
###   Format webm
### 
###   # Audio settings
###   AudioCodec vorbis
###   AudioBitRate 64             # Audio bitrate
### 
###   # Video settings
###   VideoCodec libvpx
###   VideoSize 320x256           # Video resolution
###   VideoFrameRate 15           # Video FPS
###   AVOptionVideo flags +global_header  # Parameters passed to encoder
###                                       # (same as ffmpeg command-line parameters)
###   AVOptionVideo cpu-used 0
###   AVOptionVideo qmin 10
###   AVOptionVideo qmax 42
###   AVOptionVideo quality good
###   AVOptionAudio flags +global_header
###   PreRoll 0
###   StartSendOnKey
###   VideoBitRate 100            # Video bitrate
### /Stream>
### 
###  Status webpage
### Stream status.html>
###  Format status
###  # Only allow local people to get the status
###  ACL allow localhost
###  ACL allow 192.168.0.0 192.168.255.255
###  #FaviconURL http://pond1.gladstonefamily.net:8080/favicon.ico
### /Stream>
### 
### Redirect index.html>
###  URL http://www.ffmpeg.org/
### /Redirect>
### 
###  WEBPAGE index.html to embed webm:
### !DOCTYPE html>
### html>
###  <body>
###    <video width="320" height="256" autoplay>
###        <source src="http://localhost:8090/test.webm" type="video/webm">
###        Your browser does not support the video tag.
###    </video>
###    <p><b>Note:</b> The autoplay attribute does not work on some mobile devices.</p>
###  </body>
### /html>
### 
### irefox 62.0
### pen path to local index.html file
### ile:///home/ts/Documents/Code/beuth-avatar-ss2018/website/webm/index.html






## mp4 rtp
##fserver -d -f ffserver_mp4.conf 
##
##fmpeg -ar 8000 -f alsa -i hw:0 -acodec mp2 -b:a 128k http://localhost:8090/feed1.ffm
##
##sound ???
##fserver -d -f ffserver_mp4_alsa.conf
##fmpeg -r 25 -s 352x288 -f video4linux2 -i /dev/video1 -fflags nobuffer -f alsa -i pulse -an http://localhost:8090/feed1.ffm
##
##player rtsp://localhost:5554/test.mpeg4
##fplay rtsp://localhost:5554/test.mpeg4
##fplay -probesize 32 -sync ext rtsp://localhost:5554/test.mpeg4
##
###############################################################################
## via webm
##fserver -f ffserver.conf 
##
##fmpeg -re -f video4linux2 -i /dev/video1 -fflags nobuffer -f alsa -i pulse -an http://localhost:8090/yolandi1.ffm
##
##player http://localhost:8090/test.webm
##fplay -probesize 32 -sync ext http://localhost:8090/test.webm
##############################################################################
##
##
##nstall gst-rtsp-server1.2:
##udo apt install gir1.2-gst-rtsp-server-1.0
##ttps://launchpad.net/ubuntu/+source/gst-rtsp-server1.0
##
##auern√∂ppel:
##ttps://github.com/FrankBau/raspi-repo-manifest/wiki/RTSP
##
##       
#############################################
## record mp4 video with sound from webcam
#############################################
##ffmpeg -y -f video4linux2 -s 320x240 -i /dev/video0 -f alsa -i pulse -ac 2 -strict experimental ffmpegFile.mp4
##

